Objects that need to be controlled:
- Column: containing Elevators
- Elevators (Cages): moving up or moving down inside column depending on   selected floor
- callButtons: button on each floor outside requesting Elevators to direction up or down
- Doors: elevator doors, open and close with movement of elevator
- Floor request buttons: button inside selecting destination floor
- Elevator state: current floor and a list of next stops.

SET selectedElevator TO "IDLE[Stop]" 
SET buildingFloors = select FROM [1 TO 10]
SET callButton GET Receive a pick-up request
SET elevatorState WITH list OF [Stop].

"Querying the state of the elevator"
SEQUENCE elevatorState USING floor, position, direction
    REPEAT 
          elevatorState
    UNTIL requestElevator USING floor, direction
END SEQUENCE

SEQUENCE IDLE USING current floor, direction
    SET Receives an update about the status of an elevator
END SEQUENCE

SEQUENCE moveElevator USING current floor, direction
    CASE in parallel
        elevators move step by step to their next stops with a specified `duration` time stepping
        take the closest elevator for every request
        add the next stops to the selected elevator and update the elevator state
        every incoming request
    ENDCASE
    CALL requestFloorButton USING current floor, direction
END SEQUENCE

SEQUENCE findBestElevator USING current floor, direction
    GET requestElevator THEN
        CALL moveElevator USING current floor, direction
    ENDIF
END SEQUENCE

SEQUENCE requestElevator USING current floor, direction
    GET requestButton is pressed
    CALL requestButton USING current floor, direction
END SEQUENCE

SEQUENCE requestButton USING current floor, direction
    CALL buildingFloors USING current floor, direction
    SET IDLE =  "initial" TO "destination" WITH requestButton
    SET moveElevator sends a request from floor "initial" to "destination".
    CALL  moveElevator WITH floor, direction
END SEQUENCE

SEQUENCE chosenElevator USING current floor, direction
    SET elevatorSystem will add floor "initial" to its list of next stops.
END SEQUENCE

SEQUENCE waitSystem USING current floor, direction
    SET hasArrived will guide the passenger to wait for the chosen elevator, if found.
END SEQUENCE 

SEQUENCE modeStandby USING current floor, direction
    CASE 
    1. an elevator has no more stops to serve, it remains idle at its last visited floor.
   
    2. no elevators are now found that can accept a passenger request, the request waits until it is accepted by some elevator. The passenger will be notified at that time.
    
    3. will look for the nearest elevator that is either idle, or moving in the correct direction.
    ENDCASE
END SEQUENCE

SEQUENCE hasArrived USING current floor, direction
    SET doorOpen USING current floor, direction
    The passenger request remains active until an elevator stops at floor "initial" to pick up the passenger; then the request is deleted.
END SEQUENCE

SEQUENCE doorOpenClose USING current floor, direction
    1 INIT doorOpen when the door is opened, moveElevator suspended until the door would be closed.
    2 INIT doorClose after 10 second, when the elevator is on its next stop, wait 10 second, if someone want to enter without sending pickupRequest and the elevatorâ€™s door is still opened 
    IF the door is opened which will be suspended until the door would be closed.
    ENDIF
END SEQUENCE

SEQUENCE requestFloorButton USING current floor, direction
    CALL moveElevator TO destination floor, direction
END SEQUENCE





