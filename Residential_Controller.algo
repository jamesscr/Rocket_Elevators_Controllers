_____________________________________"Residential"______________________________________
                  
"column: Contains two elevators in a column"
"elevator: moving up or moving down inside column depending on selected floor"
"elevatorDoor: The door of the elevator"
"elevatorState: position of elevator (moving, stoped, idle)"
"requestButton: button on each floor outside requesting Elevators to direction up or down"
"requestButtonFloor: button inside selecting destination floor"
"closeDoorButton: The button that makes the door close sooner"
"openDoorButton: The button that makes the door stay open"
"direction: Where the elevator is going (up or down) from [1 TO 10]"
"MoveElevator: Is the elevator in moving or idling"

____________________________________"elevatorSystem"_____________________________________

SEQUENCE elevatorState USING floor, direction
    SET direction to up
    SET direction to down
    SET IDLE TO standby
    FOR direction WITH at array[1 TO 10]
        FOR elevatorState TO IDLE
          IF elevatorState is NULL
             standby
          ELSE 
             CALL requestElevator USING floor, direction
          ENDIF   
        END FOR
    END FOR
END SEQUENCE

SEQUENCE requestElevator USING current floor, direction
    GET requestButton PUSH floor at array[1 TO 10]
        CASE requestElevator OF 
            elevator is moving in the same direction :
                        CALL hasArrived TO destination floor, direction
            elevator is closer to destination :
                        CALL moveElevator TO destination floor, from[array[1 TO 10]]
            elevator is idle at the same floor :
                        CALL addWaitlist WITH floor, direction
        ENDCASE
END SEQUENCE

SEQUENCE IDLE USING current floor, direction
    If requestElevator is TO NULL
    CALL elevatorState TO floor, direction
    ELSE moveElevator TO floor, direction
    ENDIF
END SEQUENCE

SEQUENCE hasArrived USING current floor, direction
    SET doorOpen USING current floor, direction
    The passenger request remains active until an elevator stops at floor "initial" to pick up the passenger; then the request is deleted.
    CALL moveElevator TO destination floor, direction
END SEQUENCE

SEQUENCE addWaitlist USING current floor, direction
    GET addWaitlist will guide the passenger to wait for the requestElevator, 
    if found then
     CALL doorOpen with USING current floor, direction
    ELSE
        CALL moveElevator USING current floor, direction
    ENDIF
END SEQUENCE

SEQUENCE moveElevator USING current floor, direction
    CASE in parallel
        elevators move step by step to their next stops with a specified `duration` time stepping
        take the closest elevator for every request
        
        add the next stops to the selected elevator and update the elevator state
        every incoming request
    ENDCASE
END SEQUENCE

SEQUENCE requestButton USING current floor, direction
    CALL buildingFloors USING current floor, direction
    SET IDLE =  "initial" TO "destination" WITH requestButton
    SET moveElevator sends a request from floor "initial" to "destination".
    CALL  moveElevator WITH floor, direction
END SEQUENCE

SEQUENCE chosenElevator USING current floor, direction
    SET elevatorSystem will add floor "initial" to its list of next stops.
END SEQUENCE 

SEQUENCE modeStandby USING current floor, direction
    CASE 
    1. an elevator has no more stops to serve, it remains idle at its last visited floor.
   
    2. no elevators are now found that can accept a passenger request, the request waits until it is accepted by some elevator. The passenger will be notified at that time.
    
    3. will look for the nearest elevator that is either idle, or moving in the correct direction.
    ENDCASE
END SEQUENCE

SEQUENCE doorOpen WITH floor
    SET doorOpen to open
    WHILE SLEEP 10 seconds
        door is_Blocked NOT EQUAL false
    ENDWHILE 
    CALL doorClose USING elevator
END SEQUENCE

SEQUENCE doorClose WITH floor
    SET doorClose to close 
END SEQUENCE

SEQUENCE requestFloorButton USING current floor, direction
    CALL moveElevator TO destination floor, direction
END SEQUENCE





